"""Initial

Revision ID: c2e73df0b64d
Revises: 
Create Date: 2023-03-07 17:24:40.366575

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c2e73df0b64d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('addressLine1', sa.String(), nullable=False),
    sa.Column('addressLine2', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('stateOrRegion', sa.String(), nullable=False),
    sa.Column('districtOrCounty', sa.String(), nullable=False),
    sa.Column('postalCode', sa.String(), nullable=False),
    sa.Column('countryCode', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_address_id'), 'address', ['id'], unique=False)
    op.create_table('admin',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('isSuperAdmin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_admin_id'), 'admin', ['id'], unique=False)
    op.create_table('product',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('discriminator', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('type', sa.Enum('BOOK', 'BOOKLET', 'CARD', name='producttypesenum'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='productstatusenum'), nullable=False),
    sa.Column('vendor', sa.Enum('AMAZON', 'SHIPBOB', name='productvendorenum'), nullable=False),
    sa.Column('sku', sa.String(), nullable=False),
    sa.Column('isbn', sa.String(), nullable=False),
    sa.Column('keyProductFeatures', sa.String(), nullable=False),
    sa.Column('printLength', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('isbn'),
    sa.UniqueConstraint('sku')
    )
    op.create_index(op.f('ix_product_id'), 'product', ['id'], unique=False)
    op.create_table('slide',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('imageUrl', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_slide_id'), 'slide', ['id'], unique=False)
    op.create_table('amazonproduct',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('asin', sa.String(), nullable=False),
    sa.Column('displayableOrderComment', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asin')
    )
    op.create_table('errata',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('productId', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['productId'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_errata_id'), 'errata', ['id'], unique=False)
    op.create_table('order',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('addressId', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('WAITING_FOR_CONFIRMATION', 'PENDING_PAYMENT', 'PAYMENT_FAILED', 'PROCESSING', 'SHIPPED', 'CANCELED', 'FAILED_BY_VENDOR', 'UNFULFILLABLE', name='status'), nullable=False),
    sa.Column('shippingSpeedCategory', sa.Enum('STANDARD', 'EXPEDITED', 'PRIORITY', name='shippingSpeedCategory'), nullable=False),
    sa.ForeignKeyConstraint(['addressId'], ['address.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_id'), 'order', ['id'], unique=False)
    op.create_table('productimage',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('productId', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['productId'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_productimage_id'), 'productimage', ['id'], unique=False)
    op.create_table('recommended',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('productId', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('productType', sa.Enum('BOOK', 'BOOKLET', 'CARD', name='productType'), nullable=False),
    sa.ForeignKeyConstraint(['productId'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('productId')
    )
    op.create_index(op.f('ix_recommended_id'), 'recommended', ['id'], unique=False)
    op.create_table('shipbobproduct',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('barcode', sa.String(), nullable=False),
    sa.Column('gtin', sa.String(), nullable=False),
    sa.Column('upc', sa.String(), nullable=False),
    sa.Column('referenceId', sa.String(), nullable=False),
    sa.Column('shipbobId', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('barcode'),
    sa.UniqueConstraint('gtin'),
    sa.UniqueConstraint('referenceId'),
    sa.UniqueConstraint('shipbobId'),
    sa.UniqueConstraint('upc')
    )
    op.create_table('orderitem',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('productId', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('orderId', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['orderId'], ['order.id'], ),
    sa.ForeignKeyConstraint(['productId'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orderitem_id'), 'orderitem', ['id'], unique=False)
    op.create_table('payment',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('vendor', sa.Enum('STRIPE', name='paymentvendorenum'), nullable=False),
    sa.Column('orderId', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', name='paymentstatusenum'), nullable=False),
    sa.Column('paymentDate', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['orderId'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_id'), 'payment', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payment_id'), table_name='payment')
    op.drop_table('payment')
    op.drop_index(op.f('ix_orderitem_id'), table_name='orderitem')
    op.drop_table('orderitem')
    op.drop_table('shipbobproduct')
    op.drop_index(op.f('ix_recommended_id'), table_name='recommended')
    op.drop_table('recommended')
    op.drop_index(op.f('ix_productimage_id'), table_name='productimage')
    op.drop_table('productimage')
    op.drop_index(op.f('ix_order_id'), table_name='order')
    op.drop_table('order')
    op.drop_index(op.f('ix_errata_id'), table_name='errata')
    op.drop_table('errata')
    op.drop_table('amazonproduct')
    op.drop_index(op.f('ix_slide_id'), table_name='slide')
    op.drop_table('slide')
    op.drop_index(op.f('ix_product_id'), table_name='product')
    op.drop_table('product')
    op.drop_index(op.f('ix_admin_id'), table_name='admin')
    op.drop_table('admin')
    op.drop_index(op.f('ix_address_id'), table_name='address')
    op.drop_table('address')
    # ### end Alembic commands ###
